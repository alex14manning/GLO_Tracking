%%  @Author: Alex Manning - alexmann@vt.edu
%   @Date Created: 09/10/2018

function plot_vibration_data()

%  This function takes user selection of directory then merges and plots
%  all data onto a single overview graph relating acceleration in each
%  direction with time
    
    clear; clc; figure(1); figure(2); figure(3); figure(4);
    
    g = 9.81;  % acceleration due to gravity (m/s^2)
    
    myDir = uigetdir;  % directory in which .csv data files are stored
    myFiles = dir(fullfile(myDir, '*.csv'));
    for i = 1:length(myFiles)
        baseFileName = myFiles(i).name;
        filename = fullfile(myDir, baseFileName);
        fid = fopen(filename);
        data = textscan(fid, '%s %f %f %f', 'Delimiter', ' ', 'MultipleDelimsAsOne', 1, 'HeaderLines', 8);
        fclose(fid);
        
        % Converting time cell to cell of datetime objects
        time = data{1};
        time = datetime(time, 'InputFormat', 'HH:mm:ss.SSSSSS', 'Format', 'HH:mm:ss.SSSSSSS');
        
        % Storing accelerations
        ax = data{2}./g;
        ay = data{3}./g;
        az = (data{4} - g)./g;  % removing gravitational acceleration from z dimension
        
        % Moving average filter
        % 10 point
        num = 10;
        b = 1/num*ones(num, 1);
        ax_filtered10 = filter(b, 1, ax);
        ay_filtered10 = filter(b, 1, ay);
        az_filtered10 = filter(b, 1, az);
        % 100 point
        num = 100;
        b = 1/num*ones(num, 1);
        ax_filtered100 = filter(b, 1, ax);
        ay_filtered100 = filter(b, 1, ay);
        az_filtered100 = filter(b, 1, az);
        % 500 point
        num = 500;
        b = 1/num*ones(num, 1);
        ax_filtered500 = filter(b, 1, ax);
        ay_filtered500 = filter(b, 1, ay);
        az_filtered500 = filter(b, 1, az);
        
        % Plotting
        figure(1);
        plot(time, ax, 'r', time, ay, 'g', time, az, 'b');
        hold on; grid on;
        legend('Acceleration (x-direction)', 'Acceleration (y-direction)', 'Acceleration (z-direction, gravity excluded)');
        xlabel('Time (sec)');
        ylabel('Acceleration (G''s)');
        title('Vibration Data Acceleration VS. Time (Raw Data)');
        
        figure(2);
        plot(time, ax_filtered10, 'r', time, ay_filtered10, 'g', time, az_filtered10, 'b');
        hold on; grid on;
        legend('Acceleration (x-direction)', 'Acceleration (y-direction)', 'Acceleration (z-direction, gravity excluded)');
        xlabel('Time (sec)');
        ylabel('Acceleration (G''s)');
        title('Vibration Data Acceleration VS. Time (10 point moving average filter)');
        
        figure(3);
        plot(time, ax_filtered100, 'r', time, ay_filtered100, 'g', time, az_filtered100, 'b');
        hold on; grid on;
        legend('Acceleration (x-direction)', 'Acceleration (y-direction)', 'Acceleration (z-direction, gravity excluded)');
        xlabel('Time (sec)');
        ylabel('Acceleration (G''s)');
        title('Vibration Data Acceleration VS. Time (50 point moving average filter)');
        
        figure(4);
        plot(time, ax_filtered500, 'r', time, ay_filtered500, 'g', time, az_filtered500, 'b');
        hold on; grid on;
        legend('Acceleration (x-direction)', 'Acceleration (y-direction)', 'Acceleration (z-direction, gravity excluded)');
        xlabel('Time (sec)');
        ylabel('Acceleration (G''s)');
        title('Vibration Data Acceleration VS. Time (100 point moving average filter)');
    end
    
    % Plotting key time events such as launch, land, etc. (sec.)
    % Feel free to add more at user discretion
    for i = 1:4
        figure(i);
        
        launch = datetime('09:17:19.000000', 'InputFormat', 'HH:mm:ss.SSSSSS', 'Format', 'HH:mm:ss.SSSSSSS');
        vline(launch, 'k', 'Launch');
        
        peak = datetime('09:27:19.732637', 'InputFormat', 'HH:mm:ss.SSSSSS', 'Format', 'HH:mm:ss.SSSSSSS');
        vline(peak, 'k', 'Peak');
        
        land = datetime('09:40:19.045000', 'InputFormat', 'HH:mm:ss.SSSSSS', 'Format', 'HH:mm:ss.SSSSSSS');
        vline(land, 'k', 'Land');
    end
end
